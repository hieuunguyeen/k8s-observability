# otel + jaeger + prometheus + loki + grafana

version: '3'

volumes:
    log-data:
        driver: local
    prometheus-data:
    loki-data:
    grafana-storage:

networks:
    observability:
        driver: bridge

services:
    demoapp:
        build:
            context: app
        ports:
            - '8080:8080'
        volumes:
            - log-data:/var
        depends_on:
            - otel
        networks:
            - observability

    otel:
        image: otel/opentelemetry-collector-contrib:latest
        command: [--config=/etc/otel-collector-config.yaml]
        volumes:
            - ./otel-collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml
        ports:
            - '13133:13133' # health_check extension
            - '8888:8888' # Prometheus metrics exposed by the collector
            - '8889:8889' # Prometheus exporter metrics
        networks:
            - observability
        depends_on:
            - jaeger
            - prometheus
            - loki

    loki:
        image: grafana/loki:latest
        ports:
            - '3100:3100'
        volumes:
            - ./loki/loki.yaml:/etc/loki/local-config.yaml
            - loki-data:/etc/loki
        command:
            - -config.file=/etc/loki/local-config.yaml
            - -log.level=error
            - useradd -u 10001 loki
            - chown loki:loki /etc/loki/*
        networks:
            - observability

    jaeger:
        image: jaegertracing/all-in-one:latest
        ports:
            - '4317:4317' # gRPC protocol
            - '9411:9411'
            - '16686:16686' # Jaeger UI
        environment:
            - COLLECTOR_OTLP_ENABLED=true
        networks:
            - observability

    prometheus:
        image: prom/prometheus:latest
        volumes:
            - ./prometheus/prometheus.yaml:/etc/prometheus.yaml
            - prometheus-data:/prometheus
        command:
            - --web.enable-lifecycle
            - --config.file=/etc/prometheus.yaml
            - --enable-feature=otlp-write-receiver
        restart: always
        ports:
            - '9090:9090' # UI
        networks:
            - observability

    grafana:
        image: grafana/grafana:latest
        restart: unless-stopped
        ports:
            - '8081:3000'
        depends_on:
            - otel
        volumes:
            - './grafana/grafana.ini:/etc/grafana/grafana.ini'
            - 'grafana-storage:/var/lib/grafana'
        networks:
            - observability
